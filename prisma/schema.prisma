datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URI")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                       String  @id @default(auto()) @map("_id") @db.ObjectId
  userId                   String  @db.ObjectId
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String? @db.String
  refresh_token_expires_in Int?
  access_token             String? @db.String
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String? @db.String
  session_state            String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  password      String?
  accounts      Account[]
  sessions      Session[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  username      String?   @unique
  bio           String?
  interests     String[]
  isComplete    Boolean   @default(false)
  Quiz          Quiz[]
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Collection {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  name  String @unique
  image String
  Quiz  Quiz[]
}

type Answer {
  answer    String
  isCorrect Boolean?
}

type Question {
  question String
  answers  Answer[]
  points   Int
  time     Int
  image    String
  type     String
}

model Quiz {
  id             String     @id @default(auto()) @map("_id") @db.ObjectId
  topic          String
  visibility     String
  tags           String[]
  pointsMethod   String
  image          String
  description    String
  collectionName String
  collection     Collection @relation(fields: [collectionName], references: [name])
  questions      Question[]
  userId         String     @db.ObjectId
  user           User       @relation(fields: [userId], references: [id])
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
}
